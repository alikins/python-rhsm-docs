MODULE NAME
    rhsm.certificate2


CLASSES

    class _CertFactory(object)
        Factory for creating certificate objects.

        Examines the incoming file or PEM text, parses the OID structure,
        from the server, and returns the correct implementation class.
        determines the type of certificate we're dealing with
        (entitlement/product), as well as the version of the certificate

        NOTE: Please use the factory methods that leverage this class in
        certificate.py instead of this class.


        create_from_file(self, path)
            Create appropriate certificate object from a PEM file on disk.

        create_from_pem(self, pem, path=None)
            Create appropriate certificate object from a PEM string.

        _read_x509(self, x509, path, pem)

        _create_v1_cert(self, version, extensions, x509, path)

        _read_alt_name(self, x509)

        _read_subject(self, x509)

        _create_identity_cert(self, version, extensions, x509, path)

        _create_v1_prod_cert(self, version, extensions, x509, path)

        _create_v1_ent_cert(self, version, extensions, x509, path)

        _parse_v1_products(self, extensions)
            Returns an ordered list of all the product data in the
            certificate.

        _parse_v1_order(self, extensions)

        _parse_v1_content(self, extensions)

        _get_v1_cert_type(self, extensions)

        _create_v3_cert(self, version, extensions, x509, path, pem)

        _parse_v3_order(self, payload)

        _parse_v3_products(self, payload)
            Returns an ordered list of all the product data in the
            certificate.

        _parse_v3_content(self, payload)

        _decompress_payload(self, payload)
            Certificate payloads arrive in zlib compressed strings of JSON.
            This method de-compresses and parses the JSON and returns the
            resulting dict.

        Inherited methods

    class Version(object)
        Small wrapper for version string comparisons.


        __init__(self, version_str)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        __str__(self)
            str(x)

        Inherited methods

    class _Extensions2(rhsm.certificate.Extensions)


        _parse(self, x509)
            Override parent method for an X509 object from the new C
            wrapper.

        Inherited methods
            dict.__cmp__(x, y)
            dict.__contains__(D, k)
            dict.__delitem__(x, y)
            dict.__eq__(x, y)
            dict.__ge__(x, y)
            dict.__getattribute__(...)
            dict.__getitem__(x, y)
            dict.__gt__(x, y)
            rhsm.certificate.Extensions.__init__(self, x509)
            dict.__iter__(x)
            dict.__le__(x, y)
            dict.__len__(x)
            dict.__lt__(x, y)
            dict.__ne__(x, y)
            dict.__new__(T, S, *...)
            dict.__repr__(x)
            dict.__setitem__(x, i, y)
            dict.__sizeof__(D)
            rhsm.certificate.Extensions.__str__(self)
            rhsm.certificate.Extensions._get_extensions_block(self, x509)
            rhsm.certificate.Extensions.branch(self, root)
            dict.clear(D)
            dict.copy(D)
            rhsm.certificate.Extensions.find(self, oid, limit=0)
            dict.fromkeys(dict, S, v=...)
            rhsm.certificate.Extensions.get(self, oid, default=None)
            dict.has_key(D, k)
            dict.items(D)
            dict.iteritems(D)
            dict.iterkeys(D)
            dict.itervalues(D)
            dict.keys(D)
            rhsm.certificate.Extensions.ltrim(self, n)
            dict.pop(D, k, d=...)
            dict.popitem(D)
            dict.setdefault(D, k, d=...)
            dict.update(D, E, **F)
            dict.values(D)

        Inherited class variables
            dict.__hash__ = None

    class Certificate(object)
        Parent class of all x509 certificate types.


        __init__(self, x509=None, path=None, version=None, serial=None,
                 start=None, end=None, subject=None, pem=None)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        is_valid(self, on_date=None)

        is_expired(self, on_date=None)

        __cmp__(self, other)

        write(self, path)
            Write the certificate to disk.

        delete(self)
            Delete the file associated with this certificate.

        Inherited methods

    class IdentityCertificate(Certificate)


        __init__(self, alt_name=None, **kwargs)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        Inherited methods
            rhsm.certificate2.Certificate.__cmp__(self, other)
            rhsm.certificate2.Certificate.delete(self)
            rhsm.certificate2.Certificate.is_expired(self, on_date=None)
            rhsm.certificate2.Certificate.is_valid(self, on_date=None)
            rhsm.certificate2.Certificate.write(self, path)

    class ProductCertificate(Certificate)


        __init__(self, products=None, **kwargs)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        Inherited methods
            rhsm.certificate2.Certificate.__cmp__(self, other)
            rhsm.certificate2.Certificate.delete(self)
            rhsm.certificate2.Certificate.is_expired(self, on_date=None)
            rhsm.certificate2.Certificate.is_valid(self, on_date=None)
            rhsm.certificate2.Certificate.write(self, path)

    class EntitlementCertificate(ProductCertificate)


        __init__(self, order=None, content=None, extensions=None, **kwargs)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        _path_tree(self)
            :return:    PathTree object built from this cert's extensions
            :rtype:     rhsm.pathtree.PathTree

            :raise: AttributeError if self.version.major < 3

        check_path(self, path)
            Checks the given path against the list of entitled paths as
            encoded in extensions. See PathTree for more detailed docs.

            :param path:    path to which access is being requested :type
            path:    basestring

            :return:    True iff the path matches, else False :rtype:
            bool

            :raise:    ValueError when self.version.major < 3

        _check_v1_path(self, path)
            Check the requested path against a v1 certificate

            :param path:    requested path :type  path:    basestring
            :return:    True iff the path matches, else False :rtype:
            bool

        delete(self)
            Override parent to also delete certificate key.

        Static methods

            _validate_v1_url(oid_url, dest)

                Determines if the destination URL matches the OID's URL.

                Swaps out all $ variables (e.g. $basearch, $version) for a reg ex
                wildcard in that location. For example, the following entitlement:
                  content/dist/rhel/server/$version/$basearch/os

                Should allow any value for the variables:
                  content/dist/rhel/server/.+?/.+?/os

                :param oid_url: path associated with an entitlement OID, as pulled from
                                the cert's extensions.
                :type  oid_url: basestring
                :param dest:    path requested by a client
                :type  dest:    basestring

                :return: True iff the OID permits the destination else False
                :rtype:  bool

        Inherited methods
            rhsm.certificate2.Certificate.__cmp__(self, other)
            rhsm.certificate2.Certificate.is_expired(self, on_date=None)
            rhsm.certificate2.Certificate.is_valid(self, on_date=None)
            rhsm.certificate2.Certificate.write(self, path)

    class Product(object)
        Represents the product information from a certificate.


        __init__(self, id=None, name=None, version=None, architectures=None,
                 provided_tags=None)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        __eq__(self, other)

        Inherited methods

    class Order(object)
        Represents the order information for the subscription an
        entitlement originated from.


        __init__(self, name=None, number=None, sku=None, subscription=None,
                 quantity=None, virt_limit=None, socket_limit=None,
                 contract=None, quantity_used=None, warning_period=None,
                 account=None, provides_management=None, service_level=None,
                 service_type=None, stacking_id=None, virt_only=None,
                 ram_limit=None)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        __str__(self)
            str(x)

        Inherited methods

    class Content(object)


        __init__(self, content_type=None, name=None, label=None,
                 vendor=None, url=None, gpg=None, enabled=None,
                 metadata_expire=None, required_tags=None)
            x.__init__(...) initializes x; see x.__class__.__doc__ for
            signature

        __eq__(self, other)

        __str__(self)
            str(x)

        Inherited methods

VARIABLES

    log = logging.getLogger(__name__)

    REDHAT_OID_NAMESPACE = "1.3.6.1.4.1.2312.9"

    ORDER_NAMESPACE = "4"

    EXT_ORDER_NAME = "4.1"

    EXT_CERT_VERSION = "6"

    EXT_ENT_PAYLOAD = "7"

    PRODUCT_CERT = 1

    ENTITLEMENT_CERT = 2

    IDENTITY_CERT = 3
