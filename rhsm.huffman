MODULE NAME
    rhsm.huffman


CLASSES

    class HuffmanNode(object)
        Represents a node in a Huffman tree.


        __init__(self, weight, value=None, left=None, right=None,
                 parent=None)

            :param weight:  number representing the weight/priority of this node
            :type  weight:  int
            :param value:   any value carried by this node, such as a symbol to be
                            used in reconstructing (uncompressing) some data.
            :param left:    child node on the left, should have weight <= right
            :type  left:    rhsm.huffman.HuffmanNode
            :param right:   child node on the right, should have weight >= left
            :type  right:   rhsm.huffman.HuffmanNode
            :param parent:  parent node
            :type  parent:  rhsm.huffman.HuffmanNode

        is_leaf(self)
            :return:    True iff left and right are None, else False
            :rtype:     bool

        direction_from_parent(self)
            :return:    '0' if self is left of its parent, or '1' if right
            of parent. :rtype:     str

        code(self)
            :return:    Huffman code for this node as a series of
            characters '0' and '1' :rtype:     str

        __cmp__(self, other)

        __repr__(self)
            repr(x)

        Class methods

            combine(cls, left, right)
                Combine two nodes according to Huffman's tree-building
                algorithm. The weight of the left node should be <= that of
                the right node. If weights are equal, left should be the
                node that was in the queue longer. This creates a new node
                and sets it as the parent attribute of each child.

                :param left:    child node on the left, should have weight
                <= right :type  left:    rhsm.huffman.HuffmanNode :param
                right:   child node on the right, should have weight >=
                left :type  right:   rhsm.huffman.HuffmanNode

                :return:        new node that is the combination of left
                and right :rtype:         rhsm.huffman.HuffmanNode

            build_tree(cls, nodes)

                :param nodes:   list of HuffmanNode instances that will become leaves
                                in a Huffman tree.
                :type  nodes:   list
                :return:        HuffmanNode instance that is the root node of the tree
                :rtype:         rhsm.huffman.HuffmanNode

        Inherited methods
